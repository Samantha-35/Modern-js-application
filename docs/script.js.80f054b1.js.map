{"version":3,"sources":["src/helpers/fetchDeleteCharacter.js","src/helpers/fetchGetCharacters.js","src/helpers/fetchUpdateCharacter.js","src/helpers/setUpdatedCharacter.js","src/script.js/cloneGenerator.js","src/script.js/setModalValues.js","src/script.js/index.js"],"names":["base_url","fetchDeleteCharacter","fetch","characterId","method","Swal","fire","error","console","log","fetchGetCharacters","res","characters","json","filteredCharacters","slice","fetchUpdateCharacter","character","characterID","headers","body","JSON","stringify","setUpdatedCharacter","inputNameModal","inputShortDescriptionModal","inputLongDescriptionModal","updatedCharacter","name","value","shortDescription","description","cloneGenerator","template","image","heroImage","index","clone","cloneNode","content","querySelector","src","innerHTML","button","setAttribute","setModalValues","document","getElementById","target","init","forEach","hero","heroId","id","addEventListener","deleteButton","modalSaveButton","inputsModal","appendChild"],"mappings":"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","file":"script.js.80f054b1.js","sourceRoot":"..","sourcesContent":["const base_url = 'https://character-database.becode.xyz/characters/';\n\nexport const fetchDeleteCharacter = async (characterId) => {\n\ttry {\n\t\tawait fetch(`${base_url}${characterId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t});\n\t\tSwal.fire(`Deleted`, 'The character was deleted', 'success');\n\t} catch (error) {\n\t\tconsole.log(error);\n\t\tSwal.fire('Oh no!', 'there was an error, please try later', 'error');\n\t}\n};\n","const base_url = 'https://character-database.becode.xyz/characters';\n\nexport const fetchGetCharacters = async () => {\n\ttry {\n\t\tconst res = await fetch(base_url);\n\t\tconst characters = await res.json();\n\n\t\tconst filteredCharacters = characters.slice(0, 4);\n\t\tconsole.log(filteredCharacters);\n\n\t\treturn characters;\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n","const base_url = 'https://character-database.becode.xyz/characters/';\n\nexport const fetchUpdateCharacter = async (character, characterID) => {\n\ttry {\n\t\tawait fetch(`${base_url}${characterID}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(character),\n\t\t});\n\t\tSwal.fire('Nice!', 'Character updated', 'success');\n\t} catch (error) {\n\t\tSwal.fire(\n\t\t\t'Oh no!!',\n\t\t\t'Something went wrong, please try again later',\n\t\t\t'error'\n\t\t);\n\t\tconsole.log(error);\n\t}\n};\n","export const setUpdatedCharacter = (\n\tcharacter,\n\t{ inputNameModal, inputShortDescriptionModal, inputLongDescriptionModal }\n) => {\n\tconst name = inputNameModal.value;\n\tconst shortDescription = inputShortDescriptionModal.value;\n\tconst description = inputLongDescriptionModal.value;\n\n\tconst updatedCharacter = {\n\t\t...character,\n\t\tname,\n\t\tshortDescription,\n\t\tdescription,\n\t};\n\n\treturn updatedCharacter;\n};\n","export const cloneGenerator = (\n\ttemplate,\n\t{ image: heroImage, name, shortDescription, description },\n\tindex\n) => {\n\tconst clone = template.cloneNode(true).content;\n\tconst image = clone.querySelector('img');\n\n\timage.src = `data:image/*;base64,${heroImage}`;\n\n\tconst h4 = clone.querySelector('h4');\n\th4.innerHTML = name;\n\n\tconst h5 = clone.querySelector('h5');\n\th5.innerHTML = shortDescription;\n\n\tconst pEl = clone.querySelector('p');\n\tpEl.innerHTML = description;\n\n\tconst button = clone.querySelector('button');\n\tbutton.setAttribute('id', `button-${index}`);\n\n\treturn { clone, button };\n};\n","export const setModalValues = (name, shortDescription, description) => {\n\tlet inputNameModal = document.getElementById('name-modal');\n\tinputNameModal.value = name;\n\n\tlet inputShortDescriptionModal = document.getElementById(\n\t\t'short-description-modal'\n\t);\n\n\tinputShortDescriptionModal.value = shortDescription;\n\n\tlet inputLongDescriptionModal = document.getElementById(\n\t\t'long-description-modal'\n\t);\n\tinputLongDescriptionModal.value = description;\n\n\treturn {\n\t\tinputNameModal,\n\t\tinputShortDescriptionModal,\n\t\tinputLongDescriptionModal,\n\t};\n};\n","// import 'regenerator-runtime/runtime';\nimport { fetchDeleteCharacter } from '../helpers/fetchDeleteCharacter.js';\nimport { fetchGetCharacters } from '../helpers/fetchGetCharacters.js';\nimport { fetchUpdateCharacter } from '../helpers/fetchUpdateCharacter.js';\nimport { setUpdatedCharacter } from '../helpers/setUpdatedCharacter.js';\nimport { cloneGenerator } from './cloneGenerator.js';\nimport { setModalValues } from './setModalValues.js';\n\nconst target = document.getElementById('target');\nconst template = document.querySelector('template');\n\nconst init = async () => {\n\ttry {\n\t\tconst characters = await fetchGetCharacters();\n\n\t\tcharacters.forEach((hero, index) => {\n\t\t\tconst { clone, button } = cloneGenerator(template, hero, index);\n\n\t\t\tconst heroId = hero.id;\n\n\t\t\t//button to open the modal\n\t\t\tbutton.addEventListener('click', () => {\n\t\t\t\tconst { name, shortDescription, description } = hero;\n\t\t\t\tconst deleteButton = document.getElementById('delete-button');\n\t\t\t\tconst modalSaveButton = document.getElementById('button-modal');\n\n\t\t\t\t//prettier-ignore\n\t\t\t\tconst inputsModal = setModalValues(name,shortDescription,description);\n\n\t\t\t\t//Listener inside the modal for save button\n\t\t\t\tmodalSaveButton.addEventListener('click', () => {\n\t\t\t\t\tconst updatedCharacter = setUpdatedCharacter(hero, inputsModal);\n\n\t\t\t\t\tfetchUpdateCharacter(updatedCharacter, heroId);\n\t\t\t\t});\n\n\t\t\t\tdeleteButton.addEventListener('click', () => {\n\t\t\t\t\tfetchDeleteCharacter(heroId);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\ttarget.appendChild(clone);\n\t\t});\n\t} catch (error) {\n\t\tconsole.log(error);\n\t}\n};\n\ninit();\n"]}